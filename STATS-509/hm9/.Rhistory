data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(t, log(price), type = "l", xlab = "Time", ylab = "log price")
plot(t[1:208], l_return, type = "l", xlab = "Time", ylab = "log return")
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(t, log(price), type = "l", xlab = "Time", ylab = "log price")
plot(t[1:208], l_return, type = "l", xlab = "Time", ylab = "log return")
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
Nas_ARIMA = arima(log(price), order = c(0,1,1), method = "ML")
Nas_ARIMA
Nas_ARIMA = auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
tsdiag(Nas_ARIMA)
qqnorm(Nas_ARIMA$resid); qqline(Nas_ARIMA$resid)
forecasts = predict(Nas_ARIMA, 10)
Nas_ARIMA
forecasts = predict(Nas_ARIMA, 10)
Nas_ARIMA = arima(log(price)-0.003, order = c(0,1,1))
tsdiag(Nas_ARIMA)
qqnorm(Nas_ARIMA$resid); qqline(Nas_ARIMA$resid)
Nas_ARIMA
Nas_ARIMA = arima(log(price), order = c(0,1,1), drift = 0.003)
Nas_ARIMA = as.vector(auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic")))
tsdiag(Nas_ARIMA)
qqnorm(Nas_ARIMA$resid); qqline(Nas_ARIMA$resid)
Nas_ARIMA
forecasts = predict(Nas_ARIMA, 10)
forecasts = predict(as.vector(Nas_ARIMA), 10)
help("predict")
Nas_ARIMA = auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
Nas_ARIMA1 = arima(log(price), order = c(0,1,1))
tsdiag(Nas_ARIMA)
qqnorm(Nas_ARIMA$resid); qqline(Nas_ARIMA$resid)
forecasts = predict(Nas_ARIMA1, 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred + 1.96*forecasts$se), col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred - 1.96*forecasts$se), col = "blue")
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = predict(fit, h = 10)
forecasts = forecast(fit, h = 10)
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred), col = "red")
plot(forecasts, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
forecasts = forecast(fit, h = 10)
plot(forecasts)
#lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred), col = "red")
#lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred + 1.96*forecasts$se), col = "blue")
#lines(seq(from = 208, by = 1, length = 10), exp(forecasts$pred - 1.96*forecasts$se), col = "blue")
forecasts = forecast(fit, h = 10)
plot(exp(forecasts))
fit = arima(log(price), c = (0,1,1))
fit <- arima(log(price), order=c(0,1,1))
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
fit
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = forecast(fit, h = 10)
plot(exp(forecasts))
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$lower), col = "blue")
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$upper), col = "blue")
exp(forecasts$upper)
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$upper[2]), col = "blue")
exp(forecasts$upper)[2]
exp(forecasts$upper)[:2]
exp(forecasts$upper)[,2]
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
a = [1,2,3,4]
a = c[1,2,3,4]
a = c(1,2,3,4)
a
b = 5
cbind(b,a)
rbind(b,a)
forecasts
forecasts1 = c(price[209], forecasts)
forecasts1
forecasts1 = c(log(price[209]), forecasts)
forecast1$mean
forecasts1$mean
log(price[209])
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,218), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
n_return = exp(l_return) - 1
forecasts1 = c(log(price[209]), forecasts)
n_return = exp(l_return) - 1
n_return_forecast = exp(diff(log(forecasts1)))-1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220))
forecasts1 = c(log(price[209]), forecasts)
n_return = exp(l_return) - 1
n_return_forecast = exp(diff(log(forecasts1)))-1
log(forecasts1
f
log(forecasts1)
forecasts1
forecasts$upper[,2]
n_return = exp(l_return) - 1
n_return_forecast = exp(diff(c(log(price[209]), forecasts$mean)))-1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$upper[,2])))-1, col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$lower[,2])))-1, col = "blue")
knitr::opts_chunk$set(echo = TRUE)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,220), ylim = c(2500,5500))
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
n_return = exp(l_return) - 1
n_return_forecast = exp(diff(c(log(price[209]), forecasts$mean)))-1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$upper[,2])))-1, col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$lower[,2])))-1, col = "blue")
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$upper[,2])))-1, col = "blue")
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$lower[,2])))-1, col = "blue")
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,220), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts$upper[,2]
c(log(price[209]), forecasts$upper[,2])
exp(diff(c(log(price[209]), forecasts$upper[,2])))-1
exp(diff(c(log(price[209]), forecasts$upper[,2])))
diff(c(log(price[209]), forecasts$upper[,2]))
c(log(price[209]), forecasts$upper[,2])
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 208, by = 1, length = 10), exp(diff(forecasts$upper[,2]))-1, col = "blue")
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(diff(forecasts$upper[,2]))-1, col = "blue")
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(0,220), ylim = c(-0.08,0.06))
lines(seq(from = 208, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 209, by = 1, length = 9), exp(diff(forecasts$upper[,2]))-1, col = "blue")
lines(seq(from = 209, by = 1, length = 9), exp(diff(forecasts$lower[,2]))-1, col = "blue")
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
l_price.sim = arima.sim(fit, n = 2, sd = sqrt(0.0003507))
fit = auto.arima(log(price), seasonal = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
fit
l_price.sim = arima.sim(fit, n = 2, sd = sqrt(0.0003507))
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 2, sd = sqrt(0.0003507))
arima(log(price), order = c(0,1,1), seasonal = list(order = c(0,1,1), period = NA), xreg = NULL, include.mean = TRUE, method = c("ML"))
arima(log(price), order = c(0,1,1), seasonal = list(order = c(0,1,1), period = NA), xreg = NULL, include.mean = TRUE, method = c("CSS"))
arima(log(price), order = c(0,1,1), xreg = NULL, include.mean = TRUE, method = c("CSS"))
arima(log(price), order = c(0,1,1), xreg = NULL, include.mean = TRUE, method = c("ML"))
arima(log(price), order = c(0,1,1), xreg = NULL, include.mean = FALSE, method = c("ML"))
l_price.sim
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 200, sd = sqrt(0.0003507))
l_price.sim
l_price.sim[3]
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 2, sd = sqrt(0.0003507))
l_price.sim
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 2, sd = sqrt(0.0003507))
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
VaR
help(acf)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
acf(log(price), h = 20, type = c("correlation"))
acf(l_return, h = 20, type = c("correlation"))
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
acf(log(price), h = 20, type = c("correlation"))
acf(l_return, h = 20, type = c("correlation"))
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
l_return = diff(log(price))
plot(log(price), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
acf(log(price), lag = 20, type = c("correlation"))
acf(l_return, lag = 20, type = c("correlation"))
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
price.ts = ts(data = price, start = c(2012,1), frequency =52)
l_return = diff(log(price.ts))
plot(log(price.ts), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
acf(log(price.ts), lag = 20, type = c("correlation"))
acf(l_return, lag = 20, type = c("correlation"))
aic_table <- function(data,P,Q){
table <- matrix(NA,(P+1),(Q+1))
for(p in 0:P) {
for(q in 0:Q) {
table[p+1,q+1] <- arima(data,order=c(p,1,q))$aic
}
}
dimnames(table) <- list(paste("<b> AR",0:P, "</b>", sep=""),paste("MA",0:Q,sep=""))
table
}
huron_aic_table <- aic_table(log(price.ts),4,5)
require(knitr)
kable(huron_aic_table,digits=2)
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, ic = c("aic"))
library(forecast)
auto.arima(log(price), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE, ic = c("aic"))
library(forecast)
auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE, ic = c("aic"))
fit = auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = forecast(fit, h = 10)
plot(price, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,220), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,220), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(0,220), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(2012,2017), ylim = c(2500,5500))
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts$mean
lines(seq(from = 209, by = 1, length = 10), exp(forecasts$mean), col = "red")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(2015,2016), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 2016, by = 1, length = 9), exp(diff(c(log(price[209]), forecasts$upper[,2])))-1, col = "blue")
n_return = exp(l_return) - 1
plot(n_return, type = "l", xlab = "Time", ylab = "net return", xlim = c(2015,2016), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$mean)))-1, col = "red")
lines(seq(from = 2016, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$upper[,2])))-1, col = "blue")
lines(seq(from = 2016, by = 1, length = 10), exp(diff(c(log(price[209]), forecasts$lower[,2])))-1, col = "blue")
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 2, sd = sqrt(0.0003507))
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
VaR
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "log price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
fit
fit = auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
library(forecast)
auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE, ic = c("aic"))
fit = auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts
forecasts$upper
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$lower)[,2], col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
fit2
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2017), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016.5), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016.3), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$lower[,2])-1, col = "blue")
n_return = exp(l_return) - 1
fit2 = auto.arima(l_return, max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
forecasts2 = forecast(fit2, h = 10)
plot(n_return, type = "l", xlab = "Time", ylab = "net return",
xlim = c(2015,2016.2), ylim = c(-0.08,0.06))
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$mean)-1, col = "red")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$upper[,2])-1, col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10),
exp(forecasts2$lower[,2])-1, col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "price", xlim = c(2012,2016.2), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$lower)[,2], col = "blue")
forecasts = forecast(fit, h = 10)
plot(price.ts, type = "l", xlab = "Time", ylab = "price", xlim = c(2012,2016), ylim = c(2500,5500))
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$mean), col = "red")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$upper)[,2], col = "blue")
lines(seq(from = 2016, by = 1/52, length = 10), exp(forecasts$lower)[,2], col = "blue")
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(0,1,1), ma = -0.1288), n = 2, sd = sqrt(0.0003507))
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
data = read.csv("NASDAQ_Wkly_Jan1_2012_Dec31_2015.csv", header = T)
price = rev(data$Adj.Close)
price.ts = ts(data = price, start = c(2012,1), frequency =52)
l_return = diff(log(price.ts))
plot(log(price.ts), type = "l", xlab = "Time", ylab = "log price")
plot(l_return, type = "l", xlab = "Time", ylab = "log return")
acf(log(price.ts), lag = 20, type = c("correlation"))
acf(l_return, lag = 20, type = c("correlation"))
fit = auto.arima(log(price.ts), max.p = 5, max.q = 5, seasonal = FALSE, stepwise = FALSE)
tsdiag(fit)
qqnorm(fit$resid); qqline(fit$resid)
fit
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(1,1,1), ar = -0.8588, ma = 0.7577), n = 2, sd = sqrt(0.0003507)) + 0.003
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(1,1,1), ar = -0.8588, ma = 0.7577), n = 2, sd = sqrt(0.0003453)) + 0.003
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
VaR
N = 100000
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(1,1,1), ar = -0.8588, ma = 0.7577), n = 2, sd = sqrt(0.0003453)) + 0.003
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
VaR
N = 100000
set.seed(000)
l_return2 = rep(0,N)
for (i in 1:N){
l_price.sim = arima.sim(list(order = c(1,1,1), ar = -0.8588, ma = 0.7577), n = 2, sd = sqrt(0.0003453)) + 0.003
l_return2[i] = l_price.sim[3]-l_price.sim[2]
}
VaR = -(exp(quantile(l_return2, 0.005))-1)
VaR
help(arima.sim)
